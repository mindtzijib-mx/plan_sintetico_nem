#!/usr/bin/env python3
"""
Script de ejemplo con consultas √∫tiles para el Programa Sint√©tico NEM
"""

import sqlite3

def consultas_ejemplo():
    """Ejecuta varias consultas de ejemplo √∫tiles"""
    
    conn = sqlite3.connect('programa_sintetico_nem.db')
    cursor = conn.cursor()
    
    print("üéØ CONSULTAS DE EJEMPLO - PROGRAMA SINT√âTICO NEM")
    print("="*70)
    
    # 1. Contenidos de Matem√°ticas/Ciencias
    print("\nüî¢ CONTENIDOS RELACIONADOS CON MATEM√ÅTICAS Y CIENCIAS:")
    cursor.execute("""
        SELECT cf.nombre, c.numero, c.titulo
        FROM contenidos c
        JOIN campos_formativos cf ON c.campo_formativo_id = cf.id
        WHERE c.titulo LIKE '%n√∫mero%' OR c.titulo LIKE '%matem√°tica%' 
           OR c.titulo LIKE '%medici√≥n%' OR c.titulo LIKE '%geom√©tr%'
           OR c.titulo LIKE '%cienc%' OR c.titulo LIKE '%natural%'
        AND c.fase_id = 1
        ORDER BY cf.nombre, c.numero
    """)
    
    for row in cursor.fetchall():
        print(f"üìö {row[0]} - {row[1]:2d}. {row[2]}")
    
    # 2. Progresi√≥n de aprendizajes en el cuerpo humano
    print("\nüß† PROGRESI√ìN: CUERPO HUMANO (1¬∞ vs 2¬∞ grado):")
    cursor.execute("""
        SELECT g.nombre, p.descripcion
        FROM pdas p
        JOIN contenidos c ON p.contenido_id = c.id
        JOIN grados g ON p.grado_id = g.id
        WHERE c.titulo LIKE '%cuerpo humano%' AND c.fase_id = 1
        ORDER BY g.numero, p.numero_pda
    """)
    
    grado_actual = None
    for row in cursor.fetchall():
        if row[0] != grado_actual:
            print(f"\nüéì {row[0]} GRADO:")
            grado_actual = row[0]
        print(f"   ‚Ä¢ {row[1]}")
    
    # 3. Contenidos relacionados con tecnolog√≠a
    print("\nüíª CONTENIDOS RELACIONADOS CON TECNOLOG√çA:")
    cursor.execute("""
        SELECT cf.nombre, c.numero, c.titulo
        FROM contenidos c
        JOIN campos_formativos cf ON c.campo_formativo_id = cf.id
        WHERE c.titulo LIKE '%tecnolog%' OR c.titulo LIKE '%digital%' 
           OR c.titulo LIKE '%internet%' OR c.titulo LIKE '%comunicaci√≥n%'
        AND c.fase_id = 1
        ORDER BY cf.nombre, c.numero
    """)
    
    for row in cursor.fetchall():
        print(f"üìö {row[0]} - {row[1]:2d}. {row[2]}")
    
    # 4. Estad√≠sticas por campo formativo
    print("\nüìä DISTRIBUCI√ìN DE PDAs POR CAMPO Y GRADO:")
    cursor.execute("""
        SELECT 
            cf.nombre,
            g.nombre as grado,
            COUNT(p.id) as num_pdas
        FROM campos_formativos cf
        JOIN contenidos c ON cf.id = c.campo_formativo_id AND c.fase_id = 1
        JOIN pdas p ON c.id = p.contenido_id
        JOIN grados g ON p.grado_id = g.id
        GROUP BY cf.id, g.id
        ORDER BY cf.id, g.numero
    """)
    
    campo_actual = None
    for row in cursor.fetchall():
        if row[0] != campo_actual:
            print(f"\nüìö {row[0]}:")
            campo_actual = row[0]
        print(f"   üéì {row[1]}: {row[2]} PDAs")
    
    # 5. Contenidos m√°s complejos (por longitud de t√≠tulo)
    print("\nüìè CONTENIDOS M√ÅS ESPEC√çFICOS (por longitud de t√≠tulo):")
    cursor.execute("""
        SELECT cf.nombre, c.numero, c.titulo, LENGTH(c.titulo) as longitud
        FROM contenidos c
        JOIN campos_formativos cf ON c.campo_formativo_id = cf.id
        WHERE c.fase_id = 1
        ORDER BY LENGTH(c.titulo) DESC
        LIMIT 5
    """)
    
    for row in cursor.fetchall():
        print(f"üìö {row[0]} - {row[1]:2d}. {row[2]} ({row[3]} caracteres)")
    
    conn.close()

if __name__ == "__main__":
    consultas_ejemplo()
